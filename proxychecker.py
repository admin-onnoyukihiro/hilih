# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'aW1wb3J0IHN5cwoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGlmIGxlbihzeXMuYXJndikgIT0gMiBvciBzeXMuYXJndlsxXSAhPSAiYWxsb3dlZCI6CiAgICAgICAgcHJpbnQoIlRoaXMgc2NyaXB0IGNhbiBvbmx5IGJlIGV4ZWN1dGVkIGZyb20gdGhlIG1haW4gcHJvZ3JhbS4iKQogICAgICAgIHN5cy5leGl0KDEpCgppbXBvcnQgb3MKaW1wb3J0IHNodXRpbAppbXBvcnQgc3lzCmZyb20gY29uY3VycmVudC5mdXR1cmVzIGltcG9ydCBUaHJlYWRQb29sRXhlY3V0b3IsIHdhaXQKZnJvbSBnbG9iIGltcG9ydCBnbG9iCmZyb20gdGltZSBpbXBvcnQgc2xlZXAKaW1wb3J0IHRraW50ZXIgYXMgdGsKZnJvbSB0a2ludGVyIGltcG9ydCBmaWxlZGlhbG9nCmltcG9ydCByZXF1ZXN0cwpmcm9tIGZha2VfaGVhZGVycyBpbXBvcnQgSGVhZGVycwoKb3Muc3lzdGVtKCIiKQoKCmNsYXNzIGJjb2xvcnM6CiAgICBIRUFERVIgPSAnXDAzM1s5NW0nCiAgICBPS0JMVUUgPSAnXDAzM1s5NG0nCiAgICBPS0NZQU4gPSAnXDAzM1s5Nm0nCiAgICBPS0dSRUVOID0gJ1wwMzNbOTJtJwogICAgV0FSTklORyA9ICdcMDMzWzkzbScKICAgIEZBSUwgPSAnXDAzM1s5MW0nCiAgICBFTkRDID0gJ1wwMzNbMG0nCiAgICBCT0xEID0gJ1wwMzNbMW0nCiAgICBVTkRFUkxJTkUgPSAnXDAzM1s0bScKCgpwcmludChiY29sb3JzLk9LR1JFRU4gKyAiIiIKCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgAogICAgICAgIOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilojilojilojilojilZcgIOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilZcgIOKWiOKWiOKVl+KWiOKWiOKVlyAgIOKWiOKWiOKVlyAgICAgIAogICAgICAgIOKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKVkOKWiOKWiOKVl+KVmuKWiOKWiOKVl+KWiOKWiOKVlOKVneKVmuKWiOKWiOKVlyDilojilojilZTilZ0gICAgICAKICAgICAgICDilojilojilojilojilojilojilZTilZ3ilojilojilojilojilojilojilZTilZ3ilojilojilZEgICDilojilojilZEg4pWa4paI4paI4paI4pWU4pWdICDilZrilojilojilojilojilZTilZ0gICAgICAgCiAgICAgICAg4paI4paI4pWU4pWQ4pWQ4pWQ4pWdIOKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVkSAgIOKWiOKWiOKVkSDilojilojilZTilojilojilZcgICDilZrilojilojilZTilZ0gICAgICAgIAogICAgICAgIOKWiOKWiOKVkSAgICAg4paI4paI4pWRICDilojilojilZHilZrilojilojilojilojilojilojilZTilZ3ilojilojilZTilZ0g4paI4paI4pWXICAg4paI4paI4pWRICAgICAgICAgCiAgICAgICAg4pWa4pWQ4pWdICAgICDilZrilZDilZ0gIOKVmuKVkOKVnSDilZrilZDilZDilZDilZDilZDilZ0g4pWa4pWQ4pWdICDilZrilZDilZ0gICDilZrilZDilZ0gICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICDilojilojilojilojilojilojilZfilojilojilZcgIOKWiOKWiOKVl+KWiOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilojilojilojilojilZfilojilojilZcgIOKWiOKWiOKVl+KWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKWiOKWiOKWiOKWiOKVlyAKIOKWiOKWiOKVlOKVkOKVkOKVkOKVkOK'
love = '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'
god = 'AgIGZpbGVuYW1lID0gZid7ZmlsZW5hbWV9LnR4dCcKCiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKGZpbGVuYW1lLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmaDoKICAgICAgICAgICAgbG9hZGVkID0gW3guc3RyaXAoKSBmb3IgeCBpbiBmaCBpZiB4LnN0cmlwKCkgIT0gJyddCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoYmNvbG9ycy5GQUlMICsgc3RyKGUpICsgYmNvbG9ycy5FTkRDKQogICAgICAgIGlucHV0KCcnKQogICAgICAgIHN5cy5leGl0KCkKCiAgICBmb3IgbGluZXMgaW4gbG9hZGVkOgogICAgICAgIGlmIGxpbmVzLmNvdW50KCc6JykgPT0gMzoKICAgICAgICAgICAgc3BsaXQgPSBsaW5lcy5zcGxpdCgnOicpCiAgICAgICAgICAgIGxpbmVzID0gZid7c3BsaXRbMl19OntzcGxpdFstMV19QHtzcGxpdFswXX06e3NwbGl0WzFdfScKICAgICAgICBwcm94aWVzLmFwcGVuZChsaW5lcykKCiAgICByZXR1cm4gcHJveGllcwoKCmRlZiBtYWluX2NoZWNrZXIocHJveHlfdHlwZSwgcHJveHksIHBvc2l0aW9uKToKICAgIGlmIGNhbmNlbF9hbGw6CiAgICAgICAgcmFpc2UgS2V5Ym9hcmRJbnRlcnJ1cHQKCiAgICBjaGVja2VkW3Bvc2l0aW9uXSA9IE5vbmUKCiAgICB0cnk6CiAgICAgICAgcHJveHlfZGljdCA9IHsKICAgICAgICAgICAgImh0dHAiOiBmIntwcm94eV90eXBlfTovL3twcm94eX0iLAogICAgICAgICAgICAiaHR0cHMiOiBmIntwcm94eV90eXBlfTovL3twcm94eX0iLAogICAgICAgIH0KCiAgICAgICAgaGVhZGVyID0gSGVhZGVycygKICAgICAgICAgICAgaGVhZGVycz1GYWxzZQogICAgICAgICkuZ2VuZXJhdGUoKQogICAgICAgIGFnZW50ID0gaGVhZGVyWydVc2VyLUFnZW50J10KCiAgICAgICAgaGVhZGVycyA9IHsKICAgICAgICAgICAgJ1VzZXItQWdlbnQnOiBmJ3thZ2VudH0nLAogICAgICAgIH0KCiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQoCiAgICAgICAgICAgICdodHRwczovL3d3dy55b3V0dWJlLmNvbS8nLCBoZWFkZXJzPWhlYWRlcnMsIHByb3hpZXM9cHJveHlfZGljdCwgdGltZW91dD0zMCkKICAgICAgICBzdGF0dXMgPSByZXNwb25zZS5zdGF0dXNfY29kZQoKICAgICAgICBpZiBzdGF0dXMgIT0gMjAwOgogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oc3RhdHVzKQoKICAgICAgICBwcmludChiY29sb3JzLk9LQkxVRSArIGYiV29ya2VyIHtwb3NpdGlvbisxfSB8ICIgKyBiY29sb3JzLk9LR1JFRU4gKwogICAgICAgICAgICAgIGYne3Byb3h5fSB8IEdPT0QgfCBUeXBlIDoge3Byb3h5X3R5cGV9IHwgUmVzcG9uc2UgOiB7c3RhdHVzfScgKyBiY29sb3JzLkVOREMpCgogICAgICAgIHByaW50KGYne3Byb3h5fXx7cHJveHlfdHlwZX0nLCBmaWxlPW9wZW4oJ0dvb2RQcm94eS50eHQnLCAnYScpKQoKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICB0cnk6CiAgICAgICAgICAgIGUgPSBpbnQoZS5hcmdzWzBdKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgIGUgPSAnJwogICAgICAgIHByaW50KGJjb2xvcnMuT0tCTFVFICsgZiJXb3JrZXIge3Bvc2l0aW9uKzF9IHwgIiArIGJjb2xvcnMuRkFJTCArCiAgICAgICAgICAgICAgZid7cHJveHl9IHwge3Byb3h5X3R5cGV9IHwgQkFEIHwge2V9JyArIGJjb2xvcnMuRU5EQykKICAgICAgICBjaGVja2VkW3Bvc2l0aW9uXSA9IHByb3h5X3R5cGUKCgpkZWYgcHJveHlfY2hlY2socG9zaXRpb24pOgogICAgc2xlZXAoMikKICAgIHByb3h5ID0gcHJveHlfbGlzdFtwb3NpdGlvbl0KCiAgICBpZiAnfCcgaW4gcHJveHk6CiAgICAgICAgc3BsaXR0ZWQgPSBwcm94eS5zcGxpdCgnfCcpCiAgI'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))