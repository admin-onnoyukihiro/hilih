# Python code by OnnoYukihiro

import base64, codecs
magic = 'import tkinter as tk
import pyrebase
import sys
import io
import json
import logging
import re
import textwrap
from concurrent.futures import ThreadPoolExecutor, wait
from time import gmtime, sleep, strftime, time
import psutil
from fake_headers import Headers, browsers
from faker import Faker
from requests.exceptions import RequestException
from tabulate import tabulate
from undetected_chromedriver.patcher import Patcher
from youtubeviewer import website
from youtubeviewer.basics import *
from youtubeviewer.config import create_config
from youtubeviewer.database import *
from youtubeviewer.download_driver import *
from youtubeviewer.load_files import *
from youtubeviewer.proxies import *


firebaseConfig = {'apiKey': "AIzaSyDmcdsTV3qP2StRiXzf0VV-BP48OXN3Z7c",
                  'authDomain': "authytviewer.firebaseapp.com",
                  'databaseURL': "https://authytviewer-default-rtdb.asia-southeast1.firebasedatabase.app",
                  'projectId': "authytviewer",
                  'storageBucket': "authytviewer.appspot.com",
                  'messagingSenderId': "652200996942",
                  'appId': "1:652200996942:web:58f685e337d55f8191131f",
                  'measurementId': "G-F3GMX8YB23"}

firebase = pyrebase.initialize_app(firebaseConfig)
auth = firebase.auth()

class MainForm:
    def __init__(self, master):
        self.master = master
        master.title("YtViewer")
        master.protocol("WM_DELETE_WINDOW", self.on_close)


        log = logging.getLogger('werkzeug')
        log.disabled = True

        SCRIPT_VERSION = '1.8.0'

        print(bcolors.OKGREEN + """
        ─────────────────────────────────────────────────────────────────────

        ██╗   ██╗████████╗    ██╗   ██╗██╗███████╗██╗    ██╗███████╗██████╗ 
        ╚██╗ ██╔╝╚══██╔══╝    ██║   ██║██║██╔════╝██║    ██║██╔════╝██╔══██╗
         ╚████╔╝    ██║       ██║   ██║██║█████╗  ██║ █╗ ██║█████╗  ██████╔╝
          ╚██╔╝     ██║       ╚██╗ ██╔╝██║██╔══╝  ██║███╗██║██╔══╝  ██╔══██╗
           ██║      ██║        ╚████╔╝ ██║███████╗╚███╔███╔╝███████╗██║  ██║
           ╚═╝      ╚═╝         ╚═══╝  ╚═╝╚══════╝ ╚══╝╚══╝ ╚══════╝╚═╝  ╚═╝

        ───────────────────────── BY ONNOYUKIHIRO ───────────────────────────

        """ + bcolors.ENDC)

        print(bcolors.OKCYAN + """
                [ Yt Viewers By Onno Yukihiro ]
        """ + bcolors.ENDC)

        print(bcolors.WARNING + f"""
        +{'-'*26} Version: {SCRIPT_VERSION} {'-'*26}+
        """ + bcolors.ENDC)

        proxy = None
        status = None
        start_time = None
        cancel_all = False

        urls = []
        queries = []
        suggested = []

        hash_urls = None
        hash_queries = None
        hash_config = None

        driver_dict = {}
        duration_dict = {}
        checked = {}
        summary = {}
        video_statistics = {}
        view = []
        bad_proxies = []
        used_proxies = []
        temp_folders = []
        console = []

        threads = 0
        views = 100

        fake = Faker()
        cwd = os.getcwd()
        patched_drivers = os.path.join(cwd, 'patched_drivers')
        config_path = os.path.join(cwd, 'config.json')
        driver_identifier = os.path.join(cwd, 'patched_drivers', 'chromedriver')

        DATABASE = os.path.join(cwd, 'database.db')
        DATABASE_BACKUP = os.path.join(cwd, 'database_backup.db')

        animation = ["⢿", "⣻", "⣽", "⣾", "⣷", "⣯", "⣟", "⡿"]
        headers_1 = ['Worker', 'Judul Video', 'Watch / Actual Duration']
        headers_2 = ['Index', 'Judul Video', 'Views']

        width = 0
        viewports = ['2560,1440', '1920,1080', '1440,900',
                    '1536,864', '1366,768', '1280,1024', '1024,768']

        referers = ['https://search.yahoo.com/', 'https://duckduckgo.com/', 'https://www.google.com/',
                    'https://www.bing.com/', 'https://t.co/', '']

        referers = choices(referers, k=len(referers)*3)

        website.console = console
        website.database = DATABASE


        def monkey_patch_exe(self):
            linect = 0
            replacement = self.gen_random_cdc()
            replacement = f"  var key = '${replacement.decode()}_';\n".encode()
            with io.open(self.executable_path, "r+b") as fh:
                for line in iter(lambda: fh.readline(), b""):
                    if b"var key = " in line:
                        fh.seek(-len(line), 1)
                        fh.write(replacement)
                        linect += 1
                return linect


        Patcher.patch_exe = monkey_patch_exe


        def timestamp():
            global date_fmt
            date_fmt = datetime.now().strftime("%d-%b-%Y %H:%M:%S")
            return bcolors.OKGREEN + f'[{date_fmt}] | ' + bcolors.OKCYAN + f'{cpu_usage} | '


        def clean_exe_temp(folder):
            temp_name = None
            if hasattr(sys, '_MEIPASS'):
                temp_name = sys._MEIPASS.split('\\')[-1]
            else:
                if sys.version_info.minor < 7 or sys.version_info.minor > 11:
                    print(
                        f'versi python mu terlalu jadul bro : {sys.version}')
                    print(f'Install Python version 3.7.x to 3.11.x buat jalanin script ini')
                    input("")
                    sys.exit()

            for f in glob(os.path.join('temp', folder, '*')):
                if temp_name not in f:
                    shutil.rmtree(f, ignore_errors=True)


        def update_chrome_version():
            link = 'https://gist.githubusercontent.com/MShawon/29e185038f22e6ac5eac822a1e422e9d/raw/versions.txt'

            output = requests.get(link, timeout=60).text
            chrome_versions = output.split('\n')

            browsers.chrome_ver = chrome_versions


        def check_update():
            api_url = 'https://api.github.com/repos/MShawon/YouTube-Viewer/releases/latest'
            try:
                response = requests.get(api_url, timeout=30)

                RELEASE_VERSION = response.json()['tag_name']

                if RELEASE_VERSION > SCRIPT_VERSION:
                    print(bcolors.OKCYAN + '#'*100 + bcolors.ENDC)
                    print(bcolors.OKCYAN + 'Update Available!!! ' +
                        f'YouTube Viewer version {SCRIPT_VERSION} needs to update to {RELEASE_VERSION} version.' + bcolors.ENDC)

                    try:
                        notes = response.json()['body'].split(
                            'SHA256')[0].split('\r\n')
                        for note in notes:
                            if note:
                                print(bcolors.HEADER + note + bcolors.ENDC)
                    except Exception:
                        pass
                    print(bcolors.OKCYAN + '#'*100 + '\n' + bcolors.ENDC)
            except Exception:
                pass


        def create_html(text_dict):
            if len(console) > 250:
                console.pop()

            date = f'<span style="color:#23d18b"> [{date_fmt}] | </span>'
            cpu = f'<span style="color:#29b2d3"> {cpu_usage} | </span>'
            str_fmt = ''.join(
                [f'<span style="color:{key}"> {value} </span>' for key, value in text_dict.items()])
            html = date + cpu + str_fmt

            console.insert(0, html)


        def detect_file_change():
            global hash_urls, hash_queries, urls, queries

            if hash_urls != get_hash("urls.txt"):
                hash_urls = get_hash("urls.txt")
                urls = load_url()
                suggested.clear()

            if hash_queries != get_hash("search.txt"):
                hash_queries = get_hash("search.txt")
                queries = load_search()
                suggested.clear()


        def direct_or_search(position):
            keyword = None
            video_title = None
            if position % 2:
                try:
                    method = 1
                    url = choice(urls)
                    if 'music.youtube.com' in url:
                        youtube = 'Music'
                    else:
                        youtube = 'Video'
                except IndexError:
                    raise Exception("urls.txt Kosong Cuk!")

            else:
                try:
                    method = 2
                    query = choice(queries)
                    keyword = query[0]
                    video_title = query[1]
                    url = "https://www.youtube.com"
                    youtube = 'Video'
                except IndexError:
                    try:
                        youtube = 'Music'
                        url = choice(urls)
                        if 'music.youtube.com' not in url:
                            raise Exception
                    except Exception:
                        raise Exception("search.txt Kososng Cuk!")

            return url, method, youtube, keyword, video_title


        def features(driver):
            if bandwidth:
                save_bandwidth(driver)

            bypass_popup(driver)

            bypass_other_popup(driver)

            play_video(driver)

            change_playback_speed(driver, playback_speed)


        def update_view_count(position):
            view.append(position)
            view_count = len(view)
            print(timestamp() + bcolors.OKCYAN +
                f'Worker {position} | View added : {view_count}' + bcolors.ENDC)

            create_html({"#29b2d3": f'Worker {position} | View added : {view_count}'})

            if database:
                try:
                    update_database(
                        database=DATABASE, threads=max_threads)
                except Exception:
                    pass


        def set_referer(position, url, method, driver):
            referer = choice(referers)
            if referer:
                if method == 2 and 't.co/' in referer:
                    driver.get(url)
                else:
                    if 'search.yahoo.com' in referer:
                        driver.get('https://duckduckgo.com/')
                        driver.execute_script(
                            "window.history.pushState('page2', 'Title', arguments[0]);", referer)
                    else:
                        driver.get(referer)

                    driver.execute_script(
                        "window.location.href = '{}';".for'
love = ''
god = '               raise Exception(
                            f"Error channel | {type(e).__name__} | {e.args[0] if e.args else ''}")

                    print(timestamp() + bcolors.OKBLUE +
                        f"Worker {position} | {log}" + bcolors.ENDC)

                    create_html({"#3b8eea": f"Worker {position} | {log}"})

                elif option == 3:
                    try:
                        output = play_end_screen_video(driver)
                    except WebDriverException as e:
                        raise Exception(
                            f"Error end screen | {type(e).__name__} | {e.args[0] if e.args else ''}")

                    print(timestamp() + bcolors.OKBLUE +
                        f"Worker {position} | Video diputar dari layar akhir : [{output}]" + bcolors.ENDC)

                    create_html(
                        {"#3b8eea": f"Worker {position} | Video diputar dari layar akhir : [{output}]"})

                if option in [2, 3]:
                    skip_initial_ad(driver, output, duration_dict)

                    features(driver)

                    current_url, current_channel = control_player(
                        driver, output, position, proxy, youtube, collect_id=False)

                if option in [2, 3, 4]:
                    update_view_count(position)


        def windows_kill_drivers():
            for process in constructor.Win32_Process(["CommandLine", "ProcessId"]):
                try:
                    if 'UserAgentClientHint' in process.CommandLine:
                        print(f'Killing PID : {process.ProcessId}', end="\r")
                        subprocess.Popen(['taskkill', '/F', '/PID', f'{process.ProcessId}'],
                                        stdout=subprocess.PIPE, stderr=subprocess.DEVNULL, stdin=subprocess.DEVNULL)
                except Exception:
                    pass
            print('\n')


        def quit_driver(driver, data_dir):
            if driver and driver in driver_dict:
                driver.quit()
                if data_dir in temp_folders:
                    temp_folders.remove(data_dir)

            proxy_folder = driver_dict.pop(driver, None)
            if proxy_folder:
                shutil.rmtree(proxy_folder, ignore_errors=True)

            status = 400
            return status


        def main_viewer(proxy_type, proxy, position):
            global width, viewports
            driver = None
            data_dir = None

            if cancel_all:
                raise KeyboardInterrupt

            try:
                detect_file_change()

                checked[position] = None

                header = Headers(
                    browser="chrome",
                    os=osname,
                    headers=False
                ).generate()
                agent = header['User-Agent']

                url, method, youtube, keyword, video_title = direct_or_search(position)

                if category == 'r' and proxy_api:
                    for _ in range(20):
                        proxy = choice(proxies_from_api)
                        if proxy not in used_proxies:
                            break
                    used_proxies.append(proxy)

                status = check_proxy(category, agent, proxy, proxy_type)

                if status != 200:
                    raise RequestException(status)

                try:
                    print(timestamp() + bcolors.OKBLUE + f"Worker {position} | " + bcolors.OKGREEN +
                        f"{proxy} | {proxy_type.upper()} | Good Proxy | Membuka driver baru..." + bcolors.ENDC)

                    create_html({"#3b8eea": f"Worker {position} | ",
                                "#23d18b": f"{proxy.split('@')[-1]} | {proxy_type.upper()} | Good Proxy | Opening a new driver..."})

                    while proxy in bad_proxies:
                        bad_proxies.remove(proxy)
                        sleep(1)

                    patched_driver = os.path.join(
                        patched_drivers, f'chromedriver_{position%threads}{exe_name}')

                    try:
                        Patcher(executable_path=patched_driver).patch_exe()
                    except Exception:
                        pass

                    proxy_folder = os.path.join(
                        cwd, 'extension', f'proxy_auth_{position}')

                    factor = int(threads/(0.1*threads + 1))
                    sleep_time = int((str(position)[-1])) * factor
                    sleep(sleep_time)
                    if cancel_all:
                        raise KeyboardInterrupt

                    driver = get_driver(background, viewports, agent, auth_required,
                                        patched_driver, proxy, proxy_type, proxy_folder)

                    driver_dict[driver] = proxy_folder

                    data_dir = driver.capabilities['chrome']['userDataDir']
                    temp_folders.append(data_dir)

                    sleep(2)

                    info = spoof_timezone_geolocation(proxy_type, proxy, driver)

                    isdetected = driver.execute_script('return navigator.webdriver')

                    print(timestamp() + bcolors.OKBLUE + f"Worker {position} | " + bcolors.OKGREEN +
                        f"{proxy} | {proxy_type.upper()} | " + bcolors.OKCYAN + f"{info} | Detected? : {isdetected}" + bcolors.ENDC)

                    create_html({"#3b8eea": f"Worker {position} | ",
                                "#23d18b": f"{proxy.split('@')[-1]} | {proxy_type.upper()} | ", "#29b2d3": f"{info} | Detected? : {isdetected}"})

                    if width == 0:
                        width = driver.execute_script('return screen.width')
                        height = driver.execute_script('return screen.height')
                        print(f'Display resolution : {width}x{height}')
                        viewports = [i for i in viewports if int(i[:4]) <= width]

                    set_referer(position, url, method, driver)

                    if 'consent' in driver.current_url:
                        print(timestamp() + bcolors.OKBLUE +
                            f"Worker {position} | Melewati persetujuan..." + bcolors.ENDC)

                        create_html(
                            {"#3b8eea": f"Worker {position} | Melewati persetujuan..."})

                        bypass_consent(driver)

                    if video_title:
                        output = video_title
                    else:
                        output = driver.title[:-10]

                    if youtube == 'Video':
                        view_stat = youtube_normal(
                            method, keyword, video_title, driver, output)
                    else:
                        view_stat, output = youtube_music(driver)

                    if 'watching' in view_stat:
                        youtube_live(proxy, position, driver, output)

                    else:
                        current_url, current_channel = music_and_video(
                            proxy, position, youtube, driver, output, view_stat)

                    channel_or_endscreen(proxy, position, youtube,
                                        driver, view_stat, current_url, current_channel)

                    if randint(1, 2) == 1:
                        try:
                            driver.find_element(By.ID, 'movie_player').send_keys('k')
                        except WebDriverException:
                            pass

                    status = quit_driver(driver=driver, data_dir=data_dir)

                except Exception as e:
                    status = quit_driver(driver=driver, data_dir=data_dir)

                    print(timestamp() + bcolors.FAIL +
                        f"Worker {position} | Line : {e.__traceback__.tb_lineno} | {type(e).__name__} | {e.args[0] if e.args else ''}" + bcolors.ENDC)

                    create_html(
                        {"#f14c4c": f"Worker {position} | Line : {e.__traceback__.tb_lineno} | {type(e).__name__} | {e.args[0] if e.args else ''}"})

            except RequestException:
                print(timestamp() + bcolors.OKBLUE + f"Worker {position} | " +
                    bcolors.FAIL + f"{proxy} | {proxy_type.upper()} | Bad proxy " + bcolors.ENDC)

                create_html({"#3b8eea": f"Worker {position} | ",
                            "#f14c4c": f"{proxy.split('@')[-1]} | {proxy_type.upper()} | Bad proxy "})

                checked[position] = proxy_type
                bad_proxies.append(proxy)

            except Exception as e:
                print(timestamp() + bcolors.FAIL +
                    f"Worker {position} | Line : {e.__traceback__.tb_lineno} | {type(e).__name__} | {e.args[0] if e.args else ''}" + bcolors.ENDC)

                create_html(
                    {"#f14c4c": f"Worker {position} | Line : {e.__traceback__.tb_lineno} | {type(e).__name__} | {e.args[0] if e.args else ''}"})


        def get_proxy_list():
            if filename:
                if category == 'r':
                    factor = max_threads if max_threads > 1000 else 1000
                    proxy_list = [filename] * factor
                else:
                    if proxy_api:
                        proxy_list = scrape_api(filename)
                    else:
                        proxy_list = load_proxy(filename)

            else:
                proxy_list = gather_proxy()

            return proxy_list


        def stop_server(immediate=False):
            if not immediate:
                print('Membiarkan maksimal 15 menit untuk menyelesaikan semua driver yang berjalan...')
                for _ in range(180):
                    sleep(5)
                    if 'state=running' not in str(futures[1:-1]):
                        break

            if api:
                for _ in range(10):
                    response = requests.post(f'http://127.0.0.1:{port}/shutdown')
                    if response.status_code == 200:
                        print('Server shut down successfully!')
                        break
                    else:
                        print(f'Server shut down error : {response.status_code}')
                        sleep(3)


        def clean_exit():
            print(timestamp() + bcolors.WARNING +
                'Membersihkan proses...' + bcolors.ENDC)
            create_html({"#f3f342": "Membersihkan proses..."})

            if osname == 'win':
                driver_dict.clear()
                windows_kill_drivers()
            else:
                for driver in list(driver_dict):
                    quit_driver(driver=driver, data_dir=None)

            for folder in temp_folders:
                shutil.rmtree(folder, ignore_errors=True)


        def cancel_pending_task(not_done):
            global cancel_all

            cancel_all = True
            for future in not_done:
                _ = future.cancel()

            clean_exit()

            stop_server(immediate=True)
            _ = wait(not_done, timeout=None)

            clean_exit()


        def view_video(position):
            if position == 0:
                if api:
                    website.start_server'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
